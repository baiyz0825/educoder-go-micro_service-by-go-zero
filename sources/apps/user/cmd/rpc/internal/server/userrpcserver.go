// Code generated by goctl. DO NOT EDIT.
// Source: userrpc.proto

package server

import (
	"context"

	"github.com/baiyz0825/school-share-buy-backend/apps/user/cmd/rpc/internal/logic"
	"github.com/baiyz0825/school-share-buy-backend/apps/user/cmd/rpc/internal/svc"
	"github.com/baiyz0825/school-share-buy-backend/apps/user/cmd/rpc/pb"
)

type UserrpcServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUserrpcServer
}

func NewUserrpcServer(svcCtx *svc.ServiceContext) *UserrpcServer {
	return &UserrpcServer{
		svcCtx: svcCtx,
	}
}

// -----------------------用户专业统计表-----------------------
func (s *UserrpcServer) AddMajor(ctx context.Context, in *pb.AddMajorReq) (*pb.AddMajorResp, error) {
	l := logic.NewAddMajorLogic(ctx, s.svcCtx)
	return l.AddMajor(in)
}

func (s *UserrpcServer) UpdateMajor(ctx context.Context, in *pb.UpdateMajorReq) (*pb.UpdateMajorResp, error) {
	l := logic.NewUpdateMajorLogic(ctx, s.svcCtx)
	return l.UpdateMajor(in)
}

func (s *UserrpcServer) DelMajor(ctx context.Context, in *pb.DelMajorReq) (*pb.DelMajorResp, error) {
	l := logic.NewDelMajorLogic(ctx, s.svcCtx)
	return l.DelMajor(in)
}

func (s *UserrpcServer) GetMajorById(ctx context.Context, in *pb.GetMajorByIdReq) (*pb.GetMajorByIdResp, error) {
	l := logic.NewGetMajorByIdLogic(ctx, s.svcCtx)
	return l.GetMajorById(in)
}

func (s *UserrpcServer) GetMajorPages(ctx context.Context, in *pb.GetMajorPagesReq) (*pb.GetMajorPagesResp, error) {
	l := logic.NewGetMajorPagesLogic(ctx, s.svcCtx)
	return l.GetMajorPages(in)
}

// -----------------------用户三方关联数据-----------------------
func (s *UserrpcServer) AddThird(ctx context.Context, in *pb.AddThirdReq) (*pb.AddThirdResp, error) {
	l := logic.NewAddThirdLogic(ctx, s.svcCtx)
	return l.AddThird(in)
}

func (s *UserrpcServer) UpdateThird(ctx context.Context, in *pb.UpdateThirdReq) (*pb.UpdateThirdResp, error) {
	l := logic.NewUpdateThirdLogic(ctx, s.svcCtx)
	return l.UpdateThird(in)
}

func (s *UserrpcServer) DelThird(ctx context.Context, in *pb.DelThirdReq) (*pb.DelThirdResp, error) {
	l := logic.NewDelThirdLogic(ctx, s.svcCtx)
	return l.DelThird(in)
}

func (s *UserrpcServer) GetThirdById(ctx context.Context, in *pb.GetThirdByIdReq) (*pb.GetThirdByIdResp, error) {
	l := logic.NewGetThirdByIdLogic(ctx, s.svcCtx)
	return l.GetThirdById(in)
}

func (s *UserrpcServer) GetThirdByUserIdAndType(ctx context.Context, in *pb.GetThirdByUserIdAndTypeReq) (*pb.GetThirdByUserIdAndTypeResp, error) {
	l := logic.NewGetThirdByUserIdAndTypeLogic(ctx, s.svcCtx)
	return l.GetThirdByUserIdAndType(in)
}

func (s *UserrpcServer) GetThirdBindData(ctx context.Context, in *pb.GetThirdBindDataReq) (*pb.GetThirdBindDataResp, error) {
	l := logic.NewGetThirdBindDataLogic(ctx, s.svcCtx)
	return l.GetThirdBindData(in)
}

// -----------------------第三方用户数据-----------------------
func (s *UserrpcServer) AddThirdData(ctx context.Context, in *pb.AddThirdDataReq) (*pb.AddThirdDataResp, error) {
	l := logic.NewAddThirdDataLogic(ctx, s.svcCtx)
	return l.AddThirdData(in)
}

func (s *UserrpcServer) UpdateThirdData(ctx context.Context, in *pb.UpdateThirdDataReq) (*pb.UpdateThirdDataResp, error) {
	l := logic.NewUpdateThirdDataLogic(ctx, s.svcCtx)
	return l.UpdateThirdData(in)
}

func (s *UserrpcServer) DelThirdData(ctx context.Context, in *pb.DelThirdDataReq) (*pb.DelThirdDataResp, error) {
	l := logic.NewDelThirdDataLogic(ctx, s.svcCtx)
	return l.DelThirdData(in)
}

func (s *UserrpcServer) GetThirdDataByThirdId(ctx context.Context, in *pb.GetThirdDataByThirdIdReq) (*pb.GetThirdDataByIdResp, error) {
	l := logic.NewGetThirdDataByThirdIdLogic(ctx, s.svcCtx)
	return l.GetThirdDataByThirdId(in)
}

func (s *UserrpcServer) GetThirdDataById(ctx context.Context, in *pb.GetThirdDataByIdReq) (*pb.GetThirdDataByIdResp, error) {
	l := logic.NewGetThirdDataByIdLogic(ctx, s.svcCtx)
	return l.GetThirdDataById(in)
}

// -----------------------用户数据基本信息表-----------------------
func (s *UserrpcServer) AddUser(ctx context.Context, in *pb.AddUserReq) (*pb.AddUserResp, error) {
	l := logic.NewAddUserLogic(ctx, s.svcCtx)
	return l.AddUser(in)
}

func (s *UserrpcServer) UpdateUser(ctx context.Context, in *pb.UpdateUserReq) (*pb.UpdateUserResp, error) {
	l := logic.NewUpdateUserLogic(ctx, s.svcCtx)
	return l.UpdateUser(in)
}

func (s *UserrpcServer) DelUser(ctx context.Context, in *pb.DelUserReq) (*pb.DelUserResp, error) {
	l := logic.NewDelUserLogic(ctx, s.svcCtx)
	return l.DelUser(in)
}

func (s *UserrpcServer) GetUserById(ctx context.Context, in *pb.GetUserByIdReq) (*pb.GetUserByIdResp, error) {
	l := logic.NewGetUserByIdLogic(ctx, s.svcCtx)
	return l.GetUserById(in)
}

func (s *UserrpcServer) GetUserByPhoneOrEmail(ctx context.Context, in *pb.GetUserByPhoneOrEmailReq) (*pb.GetUserByIdResp, error) {
	l := logic.NewGetUserByPhoneOrEmailLogic(ctx, s.svcCtx)
	return l.GetUserByPhoneOrEmail(in)
}
