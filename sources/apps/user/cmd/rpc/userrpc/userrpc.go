// Code generated by goctl. DO NOT EDIT.
// Source: userrpc.proto

package userrpc

import (
	"context"

	"github.com/baiyz0825/school-share-buy-backend/apps/user/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddMajorReq                 = pb.AddMajorReq
	AddMajorResp                = pb.AddMajorResp
	AddThirdDataReq             = pb.AddThirdDataReq
	AddThirdDataResp            = pb.AddThirdDataResp
	AddThirdReq                 = pb.AddThirdReq
	AddThirdResp                = pb.AddThirdResp
	AddUserReq                  = pb.AddUserReq
	AddUserResp                 = pb.AddUserResp
	DelMajorReq                 = pb.DelMajorReq
	DelMajorResp                = pb.DelMajorResp
	DelThirdDataReq             = pb.DelThirdDataReq
	DelThirdDataResp            = pb.DelThirdDataResp
	DelThirdReq                 = pb.DelThirdReq
	DelThirdResp                = pb.DelThirdResp
	DelUserReq                  = pb.DelUserReq
	DelUserResp                 = pb.DelUserResp
	Empty                       = pb.Empty
	GetMajorByIdReq             = pb.GetMajorByIdReq
	GetMajorByIdResp            = pb.GetMajorByIdResp
	GetMajorPagesReq            = pb.GetMajorPagesReq
	GetMajorPagesResp           = pb.GetMajorPagesResp
	GetThirdBindDataReq         = pb.GetThirdBindDataReq
	GetThirdBindDataResp        = pb.GetThirdBindDataResp
	GetThirdByIdReq             = pb.GetThirdByIdReq
	GetThirdByIdResp            = pb.GetThirdByIdResp
	GetThirdByUserIdAndTypeReq  = pb.GetThirdByUserIdAndTypeReq
	GetThirdByUserIdAndTypeResp = pb.GetThirdByUserIdAndTypeResp
	GetThirdDataByIdReq         = pb.GetThirdDataByIdReq
	GetThirdDataByIdResp        = pb.GetThirdDataByIdResp
	GetThirdDataByThirdIdReq    = pb.GetThirdDataByThirdIdReq
	GetThirdDataByThirdIdResp   = pb.GetThirdDataByThirdIdResp
	GetUserByIdReq              = pb.GetUserByIdReq
	GetUserByIdResp             = pb.GetUserByIdResp
	GetUserByPhoneOrEmailReq    = pb.GetUserByPhoneOrEmailReq
	Major                       = pb.Major
	Third                       = pb.Third
	ThirdBind                   = pb.ThirdBind
	ThirdData                   = pb.ThirdData
	UpdateMajorReq              = pb.UpdateMajorReq
	UpdateMajorResp             = pb.UpdateMajorResp
	UpdateThirdDataReq          = pb.UpdateThirdDataReq
	UpdateThirdDataResp         = pb.UpdateThirdDataResp
	UpdateThirdReq              = pb.UpdateThirdReq
	UpdateThirdResp             = pb.UpdateThirdResp
	UpdateUserReq               = pb.UpdateUserReq
	UpdateUserResp              = pb.UpdateUserResp
	User                        = pb.User

	Userrpc interface {
		// -----------------------用户专业统计表-----------------------
		AddMajor(ctx context.Context, in *AddMajorReq, opts ...grpc.CallOption) (*AddMajorResp, error)
		UpdateMajor(ctx context.Context, in *UpdateMajorReq, opts ...grpc.CallOption) (*UpdateMajorResp, error)
		DelMajor(ctx context.Context, in *DelMajorReq, opts ...grpc.CallOption) (*DelMajorResp, error)
		GetMajorById(ctx context.Context, in *GetMajorByIdReq, opts ...grpc.CallOption) (*GetMajorByIdResp, error)
		GetMajorPages(ctx context.Context, in *GetMajorPagesReq, opts ...grpc.CallOption) (*GetMajorPagesResp, error)
		// -----------------------用户三方关联数据-----------------------
		AddThird(ctx context.Context, in *AddThirdReq, opts ...grpc.CallOption) (*AddThirdResp, error)
		UpdateThird(ctx context.Context, in *UpdateThirdReq, opts ...grpc.CallOption) (*UpdateThirdResp, error)
		DelThird(ctx context.Context, in *DelThirdReq, opts ...grpc.CallOption) (*DelThirdResp, error)
		GetThirdById(ctx context.Context, in *GetThirdByIdReq, opts ...grpc.CallOption) (*GetThirdByIdResp, error)
		GetThirdByUserIdAndType(ctx context.Context, in *GetThirdByUserIdAndTypeReq, opts ...grpc.CallOption) (*GetThirdByUserIdAndTypeResp, error)
		GetThirdBindData(ctx context.Context, in *GetThirdBindDataReq, opts ...grpc.CallOption) (*GetThirdBindDataResp, error)
		// -----------------------第三方用户数据-----------------------
		AddThirdData(ctx context.Context, in *AddThirdDataReq, opts ...grpc.CallOption) (*AddThirdDataResp, error)
		UpdateThirdData(ctx context.Context, in *UpdateThirdDataReq, opts ...grpc.CallOption) (*UpdateThirdDataResp, error)
		DelThirdData(ctx context.Context, in *DelThirdDataReq, opts ...grpc.CallOption) (*DelThirdDataResp, error)
		GetThirdDataByThirdId(ctx context.Context, in *GetThirdDataByThirdIdReq, opts ...grpc.CallOption) (*GetThirdDataByIdResp, error)
		GetThirdDataById(ctx context.Context, in *GetThirdDataByIdReq, opts ...grpc.CallOption) (*GetThirdDataByIdResp, error)
		// -----------------------用户数据基本信息表-----------------------
		AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*AddUserResp, error)
		UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*UpdateUserResp, error)
		DelUser(ctx context.Context, in *DelUserReq, opts ...grpc.CallOption) (*DelUserResp, error)
		GetUserById(ctx context.Context, in *GetUserByIdReq, opts ...grpc.CallOption) (*GetUserByIdResp, error)
		GetUserByPhoneOrEmail(ctx context.Context, in *GetUserByPhoneOrEmailReq, opts ...grpc.CallOption) (*GetUserByIdResp, error)
	}

	defaultUserrpc struct {
		cli zrpc.Client
	}
)

func NewUserrpc(cli zrpc.Client) Userrpc {
	return &defaultUserrpc{
		cli: cli,
	}
}

// -----------------------用户专业统计表-----------------------
func (m *defaultUserrpc) AddMajor(ctx context.Context, in *AddMajorReq, opts ...grpc.CallOption) (*AddMajorResp, error) {
	client := pb.NewUserrpcClient(m.cli.Conn())
	return client.AddMajor(ctx, in, opts...)
}

func (m *defaultUserrpc) UpdateMajor(ctx context.Context, in *UpdateMajorReq, opts ...grpc.CallOption) (*UpdateMajorResp, error) {
	client := pb.NewUserrpcClient(m.cli.Conn())
	return client.UpdateMajor(ctx, in, opts...)
}

func (m *defaultUserrpc) DelMajor(ctx context.Context, in *DelMajorReq, opts ...grpc.CallOption) (*DelMajorResp, error) {
	client := pb.NewUserrpcClient(m.cli.Conn())
	return client.DelMajor(ctx, in, opts...)
}

func (m *defaultUserrpc) GetMajorById(ctx context.Context, in *GetMajorByIdReq, opts ...grpc.CallOption) (*GetMajorByIdResp, error) {
	client := pb.NewUserrpcClient(m.cli.Conn())
	return client.GetMajorById(ctx, in, opts...)
}

func (m *defaultUserrpc) GetMajorPages(ctx context.Context, in *GetMajorPagesReq, opts ...grpc.CallOption) (*GetMajorPagesResp, error) {
	client := pb.NewUserrpcClient(m.cli.Conn())
	return client.GetMajorPages(ctx, in, opts...)
}

// -----------------------用户三方关联数据-----------------------
func (m *defaultUserrpc) AddThird(ctx context.Context, in *AddThirdReq, opts ...grpc.CallOption) (*AddThirdResp, error) {
	client := pb.NewUserrpcClient(m.cli.Conn())
	return client.AddThird(ctx, in, opts...)
}

func (m *defaultUserrpc) UpdateThird(ctx context.Context, in *UpdateThirdReq, opts ...grpc.CallOption) (*UpdateThirdResp, error) {
	client := pb.NewUserrpcClient(m.cli.Conn())
	return client.UpdateThird(ctx, in, opts...)
}

func (m *defaultUserrpc) DelThird(ctx context.Context, in *DelThirdReq, opts ...grpc.CallOption) (*DelThirdResp, error) {
	client := pb.NewUserrpcClient(m.cli.Conn())
	return client.DelThird(ctx, in, opts...)
}

func (m *defaultUserrpc) GetThirdById(ctx context.Context, in *GetThirdByIdReq, opts ...grpc.CallOption) (*GetThirdByIdResp, error) {
	client := pb.NewUserrpcClient(m.cli.Conn())
	return client.GetThirdById(ctx, in, opts...)
}

func (m *defaultUserrpc) GetThirdByUserIdAndType(ctx context.Context, in *GetThirdByUserIdAndTypeReq, opts ...grpc.CallOption) (*GetThirdByUserIdAndTypeResp, error) {
	client := pb.NewUserrpcClient(m.cli.Conn())
	return client.GetThirdByUserIdAndType(ctx, in, opts...)
}

func (m *defaultUserrpc) GetThirdBindData(ctx context.Context, in *GetThirdBindDataReq, opts ...grpc.CallOption) (*GetThirdBindDataResp, error) {
	client := pb.NewUserrpcClient(m.cli.Conn())
	return client.GetThirdBindData(ctx, in, opts...)
}

// -----------------------第三方用户数据-----------------------
func (m *defaultUserrpc) AddThirdData(ctx context.Context, in *AddThirdDataReq, opts ...grpc.CallOption) (*AddThirdDataResp, error) {
	client := pb.NewUserrpcClient(m.cli.Conn())
	return client.AddThirdData(ctx, in, opts...)
}

func (m *defaultUserrpc) UpdateThirdData(ctx context.Context, in *UpdateThirdDataReq, opts ...grpc.CallOption) (*UpdateThirdDataResp, error) {
	client := pb.NewUserrpcClient(m.cli.Conn())
	return client.UpdateThirdData(ctx, in, opts...)
}

func (m *defaultUserrpc) DelThirdData(ctx context.Context, in *DelThirdDataReq, opts ...grpc.CallOption) (*DelThirdDataResp, error) {
	client := pb.NewUserrpcClient(m.cli.Conn())
	return client.DelThirdData(ctx, in, opts...)
}

func (m *defaultUserrpc) GetThirdDataByThirdId(ctx context.Context, in *GetThirdDataByThirdIdReq, opts ...grpc.CallOption) (*GetThirdDataByIdResp, error) {
	client := pb.NewUserrpcClient(m.cli.Conn())
	return client.GetThirdDataByThirdId(ctx, in, opts...)
}

func (m *defaultUserrpc) GetThirdDataById(ctx context.Context, in *GetThirdDataByIdReq, opts ...grpc.CallOption) (*GetThirdDataByIdResp, error) {
	client := pb.NewUserrpcClient(m.cli.Conn())
	return client.GetThirdDataById(ctx, in, opts...)
}

// -----------------------用户数据基本信息表-----------------------
func (m *defaultUserrpc) AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*AddUserResp, error) {
	client := pb.NewUserrpcClient(m.cli.Conn())
	return client.AddUser(ctx, in, opts...)
}

func (m *defaultUserrpc) UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*UpdateUserResp, error) {
	client := pb.NewUserrpcClient(m.cli.Conn())
	return client.UpdateUser(ctx, in, opts...)
}

func (m *defaultUserrpc) DelUser(ctx context.Context, in *DelUserReq, opts ...grpc.CallOption) (*DelUserResp, error) {
	client := pb.NewUserrpcClient(m.cli.Conn())
	return client.DelUser(ctx, in, opts...)
}

func (m *defaultUserrpc) GetUserById(ctx context.Context, in *GetUserByIdReq, opts ...grpc.CallOption) (*GetUserByIdResp, error) {
	client := pb.NewUserrpcClient(m.cli.Conn())
	return client.GetUserById(ctx, in, opts...)
}

func (m *defaultUserrpc) GetUserByPhoneOrEmail(ctx context.Context, in *GetUserByPhoneOrEmailReq, opts ...grpc.CallOption) (*GetUserByIdResp, error) {
	client := pb.NewUserrpcClient(m.cli.Conn())
	return client.GetUserByPhoneOrEmail(ctx, in, opts...)
}
