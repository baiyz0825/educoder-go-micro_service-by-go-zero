// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	classification "github.com/baiyz0825/school-share-buy-backend/apps/resources/cmd/api/internal/handler/classification"
	comment "github.com/baiyz0825/school-share-buy-backend/apps/resources/cmd/api/internal/handler/comment"
	deplete "github.com/baiyz0825/school-share-buy-backend/apps/resources/cmd/api/internal/handler/deplete"
	fileRes "github.com/baiyz0825/school-share-buy-backend/apps/resources/cmd/api/internal/handler/fileRes"
	textRes "github.com/baiyz0825/school-share-buy-backend/apps/resources/cmd/api/internal/handler/textRes"
	"github.com/baiyz0825/school-share-buy-backend/apps/resources/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/classification/getAll",
				Handler: classification.GetAllClassificationsHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/classification/subDatas",
				Handler: classification.GetClassificationDataByPagesHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/res/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/deplete/data",
				Handler: deplete.GetFileAndSpaceInsightHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/res/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/file/uopload",
				Handler: fileRes.UploadFileResHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/file/delete",
				Handler: fileRes.DeleteFileResHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/file/search",
				Handler: fileRes.SearchFileResHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/file/getData",
				Handler: fileRes.GetFileResDataHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/file/getInfo",
				Handler: fileRes.GetFileResInfoHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/res/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/text/upload",
				Handler: textRes.UploadTextResHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/text/delete",
				Handler: textRes.DeleteTextResHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/text/search",
				Handler: textRes.SearchTextResHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/text/getInfo",
				Handler: textRes.GetTextInfoHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/res/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/comment/add",
				Handler: comment.AddUserCommentHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/comment/delete",
				Handler: comment.DeleteUserCommentHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/comment/oneDetail",
				Handler: comment.GetCommentDetailByIdHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/comment/resComments",
				Handler: comment.GetCommentsConditionHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/res/v1"),
	)
}
