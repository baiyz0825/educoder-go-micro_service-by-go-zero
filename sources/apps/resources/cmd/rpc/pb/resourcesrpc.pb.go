// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.4
// source: resourcesrpc.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------------------------------资源分类信息--------------------------------
type Classification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassID          int64  `protobuf:"varint,1,opt,name=classID,proto3" json:"classID,omitempty"`                   //资源id
	ClassParentID    int64  `protobuf:"varint,2,opt,name=classParentID,proto3" json:"classParentID,omitempty"`       //父分类ID
	ClassName        string `protobuf:"bytes,3,opt,name=className,proto3" json:"className,omitempty"`                //分类名称
	ClassResourceNum int64  `protobuf:"varint,4,opt,name=classResourceNum,proto3" json:"classResourceNum,omitempty"` //分类下资源数量
	CreateTime       int64  `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime,omitempty"`             //创建时间
	UpdateTime       int64  `protobuf:"varint,6,opt,name=updateTime,proto3" json:"updateTime,omitempty"`             //更新时间
}

func (x *Classification) Reset() {
	*x = Classification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Classification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Classification) ProtoMessage() {}

func (x *Classification) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Classification.ProtoReflect.Descriptor instead.
func (*Classification) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{0}
}

func (x *Classification) GetClassID() int64 {
	if x != nil {
		return x.ClassID
	}
	return 0
}

func (x *Classification) GetClassParentID() int64 {
	if x != nil {
		return x.ClassParentID
	}
	return 0
}

func (x *Classification) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *Classification) GetClassResourceNum() int64 {
	if x != nil {
		return x.ClassResourceNum
	}
	return 0
}

func (x *Classification) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Classification) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type AddClassificationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassParentID    int64  `protobuf:"varint,1,opt,name=classParentID,proto3" json:"classParentID,omitempty"`       //父分类ID
	ClassName        string `protobuf:"bytes,2,opt,name=className,proto3" json:"className,omitempty"`                //分类名称
	ClassResourceNum int64  `protobuf:"varint,3,opt,name=classResourceNum,proto3" json:"classResourceNum,omitempty"` //分类下资源数量
}

func (x *AddClassificationReq) Reset() {
	*x = AddClassificationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddClassificationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddClassificationReq) ProtoMessage() {}

func (x *AddClassificationReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddClassificationReq.ProtoReflect.Descriptor instead.
func (*AddClassificationReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{1}
}

func (x *AddClassificationReq) GetClassParentID() int64 {
	if x != nil {
		return x.ClassParentID
	}
	return 0
}

func (x *AddClassificationReq) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *AddClassificationReq) GetClassResourceNum() int64 {
	if x != nil {
		return x.ClassResourceNum
	}
	return 0
}

type AddClassificationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddClassificationResp) Reset() {
	*x = AddClassificationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddClassificationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddClassificationResp) ProtoMessage() {}

func (x *AddClassificationResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddClassificationResp.ProtoReflect.Descriptor instead.
func (*AddClassificationResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{2}
}

type UpdateClassificationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassID          int64  `protobuf:"varint,1,opt,name=classID,proto3" json:"classID,omitempty"`                   //资源id
	ClassParentID    int64  `protobuf:"varint,2,opt,name=classParentID,proto3" json:"classParentID,omitempty"`       //父分类ID
	ClassName        string `protobuf:"bytes,3,opt,name=className,proto3" json:"className,omitempty"`                //分类名称
	ClassResourceNum int64  `protobuf:"varint,4,opt,name=classResourceNum,proto3" json:"classResourceNum,omitempty"` //分类下资源数量
}

func (x *UpdateClassificationReq) Reset() {
	*x = UpdateClassificationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClassificationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClassificationReq) ProtoMessage() {}

func (x *UpdateClassificationReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClassificationReq.ProtoReflect.Descriptor instead.
func (*UpdateClassificationReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateClassificationReq) GetClassID() int64 {
	if x != nil {
		return x.ClassID
	}
	return 0
}

func (x *UpdateClassificationReq) GetClassParentID() int64 {
	if x != nil {
		return x.ClassParentID
	}
	return 0
}

func (x *UpdateClassificationReq) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *UpdateClassificationReq) GetClassResourceNum() int64 {
	if x != nil {
		return x.ClassResourceNum
	}
	return 0
}

type UpdateClassificationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateClassificationResp) Reset() {
	*x = UpdateClassificationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClassificationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClassificationResp) ProtoMessage() {}

func (x *UpdateClassificationResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClassificationResp.ProtoReflect.Descriptor instead.
func (*UpdateClassificationResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{4}
}

type DelClassificationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"` //id
}

func (x *DelClassificationReq) Reset() {
	*x = DelClassificationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelClassificationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelClassificationReq) ProtoMessage() {}

func (x *DelClassificationReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelClassificationReq.ProtoReflect.Descriptor instead.
func (*DelClassificationReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{5}
}

func (x *DelClassificationReq) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type DelClassificationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelClassificationResp) Reset() {
	*x = DelClassificationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelClassificationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelClassificationResp) ProtoMessage() {}

func (x *DelClassificationResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelClassificationResp.ProtoReflect.Descriptor instead.
func (*DelClassificationResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{6}
}

type GetClassificationByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"` //id
}

func (x *GetClassificationByIdReq) Reset() {
	*x = GetClassificationByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClassificationByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClassificationByIdReq) ProtoMessage() {}

func (x *GetClassificationByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClassificationByIdReq.ProtoReflect.Descriptor instead.
func (*GetClassificationByIdReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{7}
}

func (x *GetClassificationByIdReq) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type GetClassificationByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Classification *Classification `protobuf:"bytes,1,opt,name=classification,proto3" json:"classification,omitempty"` //classification
}

func (x *GetClassificationByIdResp) Reset() {
	*x = GetClassificationByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClassificationByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClassificationByIdResp) ProtoMessage() {}

func (x *GetClassificationByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClassificationByIdResp.ProtoReflect.Descriptor instead.
func (*GetClassificationByIdResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{8}
}

func (x *GetClassificationByIdResp) GetClassification() *Classification {
	if x != nil {
		return x.Classification
	}
	return nil
}

type ClassificationDataByPagesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page             int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                         //page
	Limit            int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                       //limit
	ClassificationID int64 `protobuf:"varint,3,opt,name=classificationID,proto3" json:"classificationID,omitempty"` //分类ID
	// 是否用户查询自己的
	UserId  int64 `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`
	ResType int64 `protobuf:"varint,5,opt,name=resType,proto3" json:"resType,omitempty"`
	// 关键词 名称
	KeyWord string `protobuf:"bytes,6,opt,name=KeyWord,proto3" json:"KeyWord,omitempty"`
}

func (x *ClassificationDataByPagesReq) Reset() {
	*x = ClassificationDataByPagesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClassificationDataByPagesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassificationDataByPagesReq) ProtoMessage() {}

func (x *ClassificationDataByPagesReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassificationDataByPagesReq.ProtoReflect.Descriptor instead.
func (*ClassificationDataByPagesReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{9}
}

func (x *ClassificationDataByPagesReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ClassificationDataByPagesReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ClassificationDataByPagesReq) GetClassificationID() int64 {
	if x != nil {
		return x.ClassificationID
	}
	return 0
}

func (x *ClassificationDataByPagesReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ClassificationDataByPagesReq) GetResType() int64 {
	if x != nil {
		return x.ResType
	}
	return 0
}

func (x *ClassificationDataByPagesReq) GetKeyWord() string {
	if x != nil {
		return x.KeyWord
	}
	return ""
}

type ClassificationDataByPagesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files      []*File       `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`            //File
	FilesTotal int64         `protobuf:"varint,2,opt,name=filesTotal,proto3" json:"filesTotal,omitempty"` // 文件总数
	OnlineText []*OnlineText `protobuf:"bytes,3,rep,name=onlineText,proto3" json:"onlineText,omitempty"`  //text
	TextsTotal int64         `protobuf:"varint,4,opt,name=textsTotal,proto3" json:"textsTotal,omitempty"` // 文件总数
}

func (x *ClassificationDataByPagesResp) Reset() {
	*x = ClassificationDataByPagesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClassificationDataByPagesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassificationDataByPagesResp) ProtoMessage() {}

func (x *ClassificationDataByPagesResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassificationDataByPagesResp.ProtoReflect.Descriptor instead.
func (*ClassificationDataByPagesResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{10}
}

func (x *ClassificationDataByPagesResp) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *ClassificationDataByPagesResp) GetFilesTotal() int64 {
	if x != nil {
		return x.FilesTotal
	}
	return 0
}

func (x *ClassificationDataByPagesResp) GetOnlineText() []*OnlineText {
	if x != nil {
		return x.OnlineText
	}
	return nil
}

func (x *ClassificationDataByPagesResp) GetTextsTotal() int64 {
	if x != nil {
		return x.TextsTotal
	}
	return 0
}

type ClassificationTreeMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassID          int64                     `protobuf:"varint,1,opt,name=classID,proto3" json:"classID,omitempty"`                   //资源id
	ClassParentID    int64                     `protobuf:"varint,2,opt,name=classParentID,proto3" json:"classParentID,omitempty"`       //父分类ID
	ClassName        string                    `protobuf:"bytes,3,opt,name=className,proto3" json:"className,omitempty"`                //分类名称
	ClassResourceNum int64                     `protobuf:"varint,4,opt,name=classResourceNum,proto3" json:"classResourceNum,omitempty"` //分类下资源数量
	Children         []*ClassificationTreeMenu `protobuf:"bytes,5,rep,name=children,proto3" json:"children,omitempty"`                  // 子分类数据
}

func (x *ClassificationTreeMenu) Reset() {
	*x = ClassificationTreeMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClassificationTreeMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassificationTreeMenu) ProtoMessage() {}

func (x *ClassificationTreeMenu) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassificationTreeMenu.ProtoReflect.Descriptor instead.
func (*ClassificationTreeMenu) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{11}
}

func (x *ClassificationTreeMenu) GetClassID() int64 {
	if x != nil {
		return x.ClassID
	}
	return 0
}

func (x *ClassificationTreeMenu) GetClassParentID() int64 {
	if x != nil {
		return x.ClassParentID
	}
	return 0
}

func (x *ClassificationTreeMenu) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *ClassificationTreeMenu) GetClassResourceNum() int64 {
	if x != nil {
		return x.ClassResourceNum
	}
	return 0
}

func (x *ClassificationTreeMenu) GetChildren() []*ClassificationTreeMenu {
	if x != nil {
		return x.Children
	}
	return nil
}

type SearchClassificationAllReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SearchClassificationAllReq) Reset() {
	*x = SearchClassificationAllReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchClassificationAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchClassificationAllReq) ProtoMessage() {}

func (x *SearchClassificationAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchClassificationAllReq.ProtoReflect.Descriptor instead.
func (*SearchClassificationAllReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{12}
}

type SearchClassificationAllResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Classifications []*ClassificationTreeMenu `protobuf:"bytes,1,rep,name=classifications,proto3" json:"classifications,omitempty"` // 分类数据
}

func (x *SearchClassificationAllResp) Reset() {
	*x = SearchClassificationAllResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchClassificationAllResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchClassificationAllResp) ProtoMessage() {}

func (x *SearchClassificationAllResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchClassificationAllResp.ProtoReflect.Descriptor instead.
func (*SearchClassificationAllResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{13}
}

func (x *SearchClassificationAllResp) GetClassifications() []*ClassificationTreeMenu {
	if x != nil {
		return x.Classifications
	}
	return nil
}

// --------------------------------用户上传资源量统计信息--------------------------------
type Count struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`                   //用户上传数据记录id
	UID         int64 `protobuf:"varint,2,opt,name=uID,proto3" json:"uID,omitempty"`                 //用户id
	FileNum     int64 `protobuf:"varint,3,opt,name=fileNum,proto3" json:"fileNum,omitempty"`         //用户存储文件数量
	VideoNum    int64 `protobuf:"varint,4,opt,name=videoNum,proto3" json:"videoNum,omitempty"`       //用户存储视频数量
	PicNum      int64 `protobuf:"varint,5,opt,name=picNum,proto3" json:"picNum,omitempty"`           //用户存储图片数量
	StorageSize int64 `protobuf:"varint,6,opt,name=storageSize,proto3" json:"storageSize,omitempty"` //用户存储空间占用（mb）不足mb按mb计算
	CreateTime  int64 `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime,omitempty"`   //创建时间
	UpdateTime  int64 `protobuf:"varint,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`   //更新时间
}

func (x *Count) Reset() {
	*x = Count{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Count) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Count) ProtoMessage() {}

func (x *Count) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Count.ProtoReflect.Descriptor instead.
func (*Count) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{14}
}

func (x *Count) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Count) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *Count) GetFileNum() int64 {
	if x != nil {
		return x.FileNum
	}
	return 0
}

func (x *Count) GetVideoNum() int64 {
	if x != nil {
		return x.VideoNum
	}
	return 0
}

func (x *Count) GetPicNum() int64 {
	if x != nil {
		return x.PicNum
	}
	return 0
}

func (x *Count) GetStorageSize() int64 {
	if x != nil {
		return x.StorageSize
	}
	return 0
}

func (x *Count) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Count) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type AddCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID         int64 `protobuf:"varint,1,opt,name=uID,proto3" json:"uID,omitempty"`                 //用户id
	FileNum     int64 `protobuf:"varint,2,opt,name=fileNum,proto3" json:"fileNum,omitempty"`         //用户存储文件数量
	VideoNum    int64 `protobuf:"varint,3,opt,name=videoNum,proto3" json:"videoNum,omitempty"`       //用户存储视频数量
	PicNum      int64 `protobuf:"varint,4,opt,name=picNum,proto3" json:"picNum,omitempty"`           //用户存储图片数量
	StorageSize int64 `protobuf:"varint,5,opt,name=storageSize,proto3" json:"storageSize,omitempty"` //用户存储空间占用（mb）不足mb按mb计算
}

func (x *AddCountReq) Reset() {
	*x = AddCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCountReq) ProtoMessage() {}

func (x *AddCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCountReq.ProtoReflect.Descriptor instead.
func (*AddCountReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{15}
}

func (x *AddCountReq) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *AddCountReq) GetFileNum() int64 {
	if x != nil {
		return x.FileNum
	}
	return 0
}

func (x *AddCountReq) GetVideoNum() int64 {
	if x != nil {
		return x.VideoNum
	}
	return 0
}

func (x *AddCountReq) GetPicNum() int64 {
	if x != nil {
		return x.PicNum
	}
	return 0
}

func (x *AddCountReq) GetStorageSize() int64 {
	if x != nil {
		return x.StorageSize
	}
	return 0
}

type AddCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddCountResp) Reset() {
	*x = AddCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCountResp) ProtoMessage() {}

func (x *AddCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCountResp.ProtoReflect.Descriptor instead.
func (*AddCountResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{16}
}

type UpdateCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`                   //用户上传数据记录id
	UID         int64 `protobuf:"varint,2,opt,name=uID,proto3" json:"uID,omitempty"`                 //用户id
	FileNum     int64 `protobuf:"varint,3,opt,name=fileNum,proto3" json:"fileNum,omitempty"`         //用户存储文件数量
	VideoNum    int64 `protobuf:"varint,4,opt,name=videoNum,proto3" json:"videoNum,omitempty"`       //用户存储视频数量
	PicNum      int64 `protobuf:"varint,5,opt,name=picNum,proto3" json:"picNum,omitempty"`           //用户存储图片数量
	StorageSize int64 `protobuf:"varint,6,opt,name=storageSize,proto3" json:"storageSize,omitempty"` //用户存储空间占用（mb）不足mb按mb计算
}

func (x *UpdateCountReq) Reset() {
	*x = UpdateCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCountReq) ProtoMessage() {}

func (x *UpdateCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCountReq.ProtoReflect.Descriptor instead.
func (*UpdateCountReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateCountReq) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateCountReq) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *UpdateCountReq) GetFileNum() int64 {
	if x != nil {
		return x.FileNum
	}
	return 0
}

func (x *UpdateCountReq) GetVideoNum() int64 {
	if x != nil {
		return x.VideoNum
	}
	return 0
}

func (x *UpdateCountReq) GetPicNum() int64 {
	if x != nil {
		return x.PicNum
	}
	return 0
}

func (x *UpdateCountReq) GetStorageSize() int64 {
	if x != nil {
		return x.StorageSize
	}
	return 0
}

type UpdateCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCountResp) Reset() {
	*x = UpdateCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCountResp) ProtoMessage() {}

func (x *UpdateCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCountResp.ProtoReflect.Descriptor instead.
func (*UpdateCountResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{18}
}

type DelCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelCountReq) Reset() {
	*x = DelCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCountReq) ProtoMessage() {}

func (x *DelCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCountReq.ProtoReflect.Descriptor instead.
func (*DelCountReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{19}
}

func (x *DelCountReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelCountResp) Reset() {
	*x = DelCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCountResp) ProtoMessage() {}

func (x *DelCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCountResp.ProtoReflect.Descriptor instead.
func (*DelCountResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{20}
}

type GetCountByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetCountByIdReq) Reset() {
	*x = GetCountByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountByIdReq) ProtoMessage() {}

func (x *GetCountByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountByIdReq.ProtoReflect.Descriptor instead.
func (*GetCountByIdReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{21}
}

func (x *GetCountByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCountByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count *Count `protobuf:"bytes,1,opt,name=count,proto3" json:"count,omitempty"` //count
}

func (x *GetCountByIdResp) Reset() {
	*x = GetCountByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountByIdResp) ProtoMessage() {}

func (x *GetCountByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountByIdResp.ProtoReflect.Descriptor instead.
func (*GetCountByIdResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{22}
}

func (x *GetCountByIdResp) GetCount() *Count {
	if x != nil {
		return x.Count
	}
	return nil
}

type GetCountByUIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"` //id
}

func (x *GetCountByUIdReq) Reset() {
	*x = GetCountByUIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountByUIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountByUIdReq) ProtoMessage() {}

func (x *GetCountByUIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountByUIdReq.ProtoReflect.Descriptor instead.
func (*GetCountByUIdReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{23}
}

func (x *GetCountByUIdReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GetCountByUIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count *Count `protobuf:"bytes,1,opt,name=count,proto3" json:"count,omitempty"` //count
}

func (x *GetCountByUIdResp) Reset() {
	*x = GetCountByUIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountByUIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountByUIdResp) ProtoMessage() {}

func (x *GetCountByUIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountByUIdResp.ProtoReflect.Descriptor instead.
func (*GetCountByUIdResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{24}
}

func (x *GetCountByUIdResp) GetCount() *Count {
	if x != nil {
		return x.Count
	}
	return nil
}

// --------------------------------文件资源存储表（非文本类型）--------------------------------
type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`                        //文件自增id
	UUID          int64  `protobuf:"varint,2,opt,name=UUID,proto3" json:"UUID,omitempty"`                    //文件uuid唯一标识
	Name          string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                     //文件名称
	ObfuscateName string `protobuf:"bytes,4,opt,name=obfuscateName,proto3" json:"obfuscateName,omitempty"`   //文件混淆名称
	Size          int64  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`                    //文件占用空间大小（kb）
	Owner         int64  `protobuf:"varint,6,opt,name=owner,proto3" json:"owner,omitempty"`                  //对应用户id
	Status        int64  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`                //0:已删除（云端） 1:（本地存储状态） 2:（云端存储状态，末态） 3:(用户隐藏状态）
	Type          int64  `protobuf:"varint,8,opt,name=type,proto3" json:"type,omitempty"`                    //文件所属类型 文本0、文件1、视频2、图片3
	Class         int64  `protobuf:"varint,9,opt,name=class,proto3" json:"class,omitempty"`                  //文件所属分类
	Suffix        string `protobuf:"bytes,10,opt,name=suffix,proto3" json:"suffix,omitempty"`                //文件后缀信息
	DownloadAllow int64  `protobuf:"varint,11,opt,name=downloadAllow,proto3" json:"downloadAllow,omitempty"` //是否允许查看 0 no 1 yes
	Link          string `protobuf:"bytes,12,opt,name=link,proto3" json:"link,omitempty"`                    //文件云端存储目录
	FilePoster    string `protobuf:"bytes,13,opt,name=filePoster,proto3" json:"filePoster,omitempty"`        // 文件头图
	CreateTime    int64  `protobuf:"varint,14,opt,name=createTime,proto3" json:"createTime,omitempty"`       //创建时间
	UpdateTime    int64  `protobuf:"varint,15,opt,name=updateTime,proto3" json:"updateTime,omitempty"`       //更新时间
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{25}
}

func (x *File) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *File) GetUUID() int64 {
	if x != nil {
		return x.UUID
	}
	return 0
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetObfuscateName() string {
	if x != nil {
		return x.ObfuscateName
	}
	return ""
}

func (x *File) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *File) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *File) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *File) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *File) GetClass() int64 {
	if x != nil {
		return x.Class
	}
	return 0
}

func (x *File) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *File) GetDownloadAllow() int64 {
	if x != nil {
		return x.DownloadAllow
	}
	return 0
}

func (x *File) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *File) GetFilePoster() string {
	if x != nil {
		return x.FilePoster
	}
	return ""
}

func (x *File) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *File) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type AddFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                    //文件名称
	ObfuscateName string `protobuf:"bytes,2,opt,name=obfuscateName,proto3" json:"obfuscateName,omitempty"`  //文件混淆名称
	Size          int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`                   //文件占用空间大小（kb）
	Owner         int64  `protobuf:"varint,4,opt,name=owner,proto3" json:"owner,omitempty"`                 //对应用户id
	Status        int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`               //0:已删除（云端） 1:（本地存储状态） 2:（云端存储状态，末态） 3:(用户隐藏状态）
	Type          int64  `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`                   //文件所属类型 文本0、文件1、视频2、图片3
	Class         int64  `protobuf:"varint,7,opt,name=class,proto3" json:"class,omitempty"`                 //文件所属分类
	Suffix        string `protobuf:"bytes,8,opt,name=suffix,proto3" json:"suffix,omitempty"`                //文件后缀信息
	DownloadAllow int64  `protobuf:"varint,9,opt,name=downloadAllow,proto3" json:"downloadAllow,omitempty"` //是否允许查看 0 no 1 yes
	Link          string `protobuf:"bytes,10,opt,name=link,proto3" json:"link,omitempty"`                   //文件云端存储目录
	FilePoster    string `protobuf:"bytes,11,opt,name=filePoster,proto3" json:"filePoster,omitempty"`       // 文件头图
}

func (x *AddFileReq) Reset() {
	*x = AddFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFileReq) ProtoMessage() {}

func (x *AddFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFileReq.ProtoReflect.Descriptor instead.
func (*AddFileReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{26}
}

func (x *AddFileReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddFileReq) GetObfuscateName() string {
	if x != nil {
		return x.ObfuscateName
	}
	return ""
}

func (x *AddFileReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AddFileReq) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *AddFileReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddFileReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AddFileReq) GetClass() int64 {
	if x != nil {
		return x.Class
	}
	return 0
}

func (x *AddFileReq) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *AddFileReq) GetDownloadAllow() int64 {
	if x != nil {
		return x.DownloadAllow
	}
	return 0
}

func (x *AddFileReq) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *AddFileReq) GetFilePoster() string {
	if x != nil {
		return x.FilePoster
	}
	return ""
}

type AddFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddFileResp) Reset() {
	*x = AddFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFileResp) ProtoMessage() {}

func (x *AddFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFileResp.ProtoReflect.Descriptor instead.
func (*AddFileResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{27}
}

type UpdateFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`                        //文件自增id
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                     //文件名称
	ObfuscateName string `protobuf:"bytes,3,opt,name=obfuscateName,proto3" json:"obfuscateName,omitempty"`   //文件混淆名称
	Size          int64  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`                    //文件占用空间大小（kb）
	Owner         int64  `protobuf:"varint,5,opt,name=owner,proto3" json:"owner,omitempty"`                  //对应用户id
	Status        int64  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                //0:已删除（云端） 1:（本地存储状态） 2:（云端存储状态，末态） 3:(用户隐藏状态）
	Type          int64  `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`                    //文件所属类型 文本0、文件1、视频2、图片3
	Class         int64  `protobuf:"varint,8,opt,name=class,proto3" json:"class,omitempty"`                  //文件所属分类
	Suffix        string `protobuf:"bytes,9,opt,name=suffix,proto3" json:"suffix,omitempty"`                 //文件后缀信息
	DownloadAllow int64  `protobuf:"varint,10,opt,name=downloadAllow,proto3" json:"downloadAllow,omitempty"` //是否允许查看 0 no 1 yes
	Link          string `protobuf:"bytes,11,opt,name=link,proto3" json:"link,omitempty"`                    //文件云端存储目录
	FilePoster    string `protobuf:"bytes,12,opt,name=filePoster,proto3" json:"filePoster,omitempty"`        // 文件头图
}

func (x *UpdateFileReq) Reset() {
	*x = UpdateFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFileReq) ProtoMessage() {}

func (x *UpdateFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFileReq.ProtoReflect.Descriptor instead.
func (*UpdateFileReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateFileReq) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateFileReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateFileReq) GetObfuscateName() string {
	if x != nil {
		return x.ObfuscateName
	}
	return ""
}

func (x *UpdateFileReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UpdateFileReq) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *UpdateFileReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateFileReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpdateFileReq) GetClass() int64 {
	if x != nil {
		return x.Class
	}
	return 0
}

func (x *UpdateFileReq) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *UpdateFileReq) GetDownloadAllow() int64 {
	if x != nil {
		return x.DownloadAllow
	}
	return 0
}

func (x *UpdateFileReq) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *UpdateFileReq) GetFilePoster() string {
	if x != nil {
		return x.FilePoster
	}
	return ""
}

type UpdateFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateFileResp) Reset() {
	*x = UpdateFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFileResp) ProtoMessage() {}

func (x *UpdateFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFileResp.ProtoReflect.Descriptor instead.
func (*UpdateFileResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{29}
}

type DelFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"` //id
}

func (x *DelFileReq) Reset() {
	*x = DelFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelFileReq) ProtoMessage() {}

func (x *DelFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelFileReq.ProtoReflect.Descriptor instead.
func (*DelFileReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{30}
}

func (x *DelFileReq) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type DelFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelFileResp) Reset() {
	*x = DelFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelFileResp) ProtoMessage() {}

func (x *DelFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelFileResp.ProtoReflect.Descriptor instead.
func (*DelFileResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{31}
}

type GetFileByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"` //id
}

func (x *GetFileByIdReq) Reset() {
	*x = GetFileByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileByIdReq) ProtoMessage() {}

func (x *GetFileByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileByIdReq.ProtoReflect.Descriptor instead.
func (*GetFileByIdReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{32}
}

func (x *GetFileByIdReq) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type GetFileByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File *File `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"` //file
}

func (x *GetFileByIdResp) Reset() {
	*x = GetFileByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileByIdResp) ProtoMessage() {}

func (x *GetFileByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileByIdResp.ProtoReflect.Descriptor instead.
func (*GetFileByIdResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{33}
}

func (x *GetFileByIdResp) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

type SearchFileConditionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`     //page
	Limit  int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`   //limit
	Name   string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`      //文件名称
	Owner  int64  `protobuf:"varint,4,opt,name=owner,proto3" json:"owner,omitempty"`   //对应用户id
	Status int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"` //0:已删除（云端） 1:（本地存储状态） 2:（云端存储状态，末态） 3:(用户隐藏状态）
	Type   int64  `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`     //文件所属类型 文本0、文件1、视频2、图片3
	Class  int64  `protobuf:"varint,7,opt,name=class,proto3" json:"class,omitempty"`   //文件所属分类
	Suffix string `protobuf:"bytes,8,opt,name=suffix,proto3" json:"suffix,omitempty"`  //文件后缀信息
}

func (x *SearchFileConditionReq) Reset() {
	*x = SearchFileConditionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFileConditionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFileConditionReq) ProtoMessage() {}

func (x *SearchFileConditionReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFileConditionReq.ProtoReflect.Descriptor instead.
func (*SearchFileConditionReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{34}
}

func (x *SearchFileConditionReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchFileConditionReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchFileConditionReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchFileConditionReq) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *SearchFileConditionReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SearchFileConditionReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SearchFileConditionReq) GetClass() int64 {
	if x != nil {
		return x.Class
	}
	return 0
}

func (x *SearchFileConditionReq) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

type SearchFileConditionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File []*File `protobuf:"bytes,1,rep,name=file,proto3" json:"file,omitempty"` //file
}

func (x *SearchFileConditionResp) Reset() {
	*x = SearchFileConditionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFileConditionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFileConditionResp) ProtoMessage() {}

func (x *SearchFileConditionResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFileConditionResp.ProtoReflect.Descriptor instead.
func (*SearchFileConditionResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{35}
}

func (x *SearchFileConditionResp) GetFile() []*File {
	if x != nil {
		return x.File
	}
	return nil
}

type CheckDownloadAllowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId int64 `protobuf:"varint,1,opt,name=fileId,proto3" json:"fileId,omitempty"` // 文件id
}

func (x *CheckDownloadAllowReq) Reset() {
	*x = CheckDownloadAllowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDownloadAllowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDownloadAllowReq) ProtoMessage() {}

func (x *CheckDownloadAllowReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDownloadAllowReq.ProtoReflect.Descriptor instead.
func (*CheckDownloadAllowReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{36}
}

func (x *CheckDownloadAllowReq) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

type CheckDownloadAllowResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAllow bool `protobuf:"varint,1,opt,name=isAllow,proto3" json:"isAllow,omitempty"` // 是否允许
}

func (x *CheckDownloadAllowResp) Reset() {
	*x = CheckDownloadAllowResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDownloadAllowResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDownloadAllowResp) ProtoMessage() {}

func (x *CheckDownloadAllowResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDownloadAllowResp.ProtoReflect.Descriptor instead.
func (*CheckDownloadAllowResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{37}
}

func (x *CheckDownloadAllowResp) GetIsAllow() bool {
	if x != nil {
		return x.IsAllow
	}
	return false
}

// --------------------------------在线文本资源信息--------------------------------
type OnlineText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`                  //在线文本自增id
	UUID       int64  `protobuf:"varint,2,opt,name=UUID,proto3" json:"UUID,omitempty"`              //文本uuid
	TypeSuffix int64  `protobuf:"varint,3,opt,name=typeSuffix,proto3" json:"typeSuffix,omitempty"`  //文本输入格式（0 markdown）
	Owner      int64  `protobuf:"varint,4,opt,name=owner,proto3" json:"owner,omitempty"`            //所属用户
	Content    string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`         //存储实际内容
	ClassID    int64  `protobuf:"varint,6,opt,name=classID,proto3" json:"classID,omitempty"`        //所属资源分类id
	Permission int64  `protobuf:"varint,7,opt,name=permission,proto3" json:"permission,omitempty"`  //是否允许查看 0 no 1 yes
	TextPoster string `protobuf:"bytes,8,opt,name=textPoster,proto3" json:"textPoster,omitempty"`   // 文件头图
	TextName   string `protobuf:"bytes,9,opt,name=textName,proto3" json:"textName,omitempty"`       // 文本资源名称
	CreateTime int64  `protobuf:"varint,10,opt,name=createTime,proto3" json:"createTime,omitempty"` //创建时间
	UpdateTime int64  `protobuf:"varint,11,opt,name=updateTime,proto3" json:"updateTime,omitempty"` //更新时间
}

func (x *OnlineText) Reset() {
	*x = OnlineText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineText) ProtoMessage() {}

func (x *OnlineText) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineText.ProtoReflect.Descriptor instead.
func (*OnlineText) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{38}
}

func (x *OnlineText) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *OnlineText) GetUUID() int64 {
	if x != nil {
		return x.UUID
	}
	return 0
}

func (x *OnlineText) GetTypeSuffix() int64 {
	if x != nil {
		return x.TypeSuffix
	}
	return 0
}

func (x *OnlineText) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *OnlineText) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *OnlineText) GetClassID() int64 {
	if x != nil {
		return x.ClassID
	}
	return 0
}

func (x *OnlineText) GetPermission() int64 {
	if x != nil {
		return x.Permission
	}
	return 0
}

func (x *OnlineText) GetTextPoster() string {
	if x != nil {
		return x.TextPoster
	}
	return ""
}

func (x *OnlineText) GetTextName() string {
	if x != nil {
		return x.TextName
	}
	return ""
}

func (x *OnlineText) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *OnlineText) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type AddOnlineTextReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeSuffix int64  `protobuf:"varint,1,opt,name=typeSuffix,proto3" json:"typeSuffix,omitempty"` //文本输入格式（0 markdown）
	Owner      int64  `protobuf:"varint,2,opt,name=owner,proto3" json:"owner,omitempty"`           //所属用户
	Content    string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`        //存储实际内容
	ClassID    int64  `protobuf:"varint,4,opt,name=classID,proto3" json:"classID,omitempty"`       //所属资源分类id
	Permission int64  `protobuf:"varint,5,opt,name=permission,proto3" json:"permission,omitempty"` //是否允许查看 0 no 1 yes
	TextPoster string `protobuf:"bytes,6,opt,name=textPoster,proto3" json:"textPoster,omitempty"`  // 文件头图
	TextName   string `protobuf:"bytes,7,opt,name=textName,proto3" json:"textName,omitempty"`      // 文本资源名称
}

func (x *AddOnlineTextReq) Reset() {
	*x = AddOnlineTextReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOnlineTextReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOnlineTextReq) ProtoMessage() {}

func (x *AddOnlineTextReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOnlineTextReq.ProtoReflect.Descriptor instead.
func (*AddOnlineTextReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{39}
}

func (x *AddOnlineTextReq) GetTypeSuffix() int64 {
	if x != nil {
		return x.TypeSuffix
	}
	return 0
}

func (x *AddOnlineTextReq) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *AddOnlineTextReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddOnlineTextReq) GetClassID() int64 {
	if x != nil {
		return x.ClassID
	}
	return 0
}

func (x *AddOnlineTextReq) GetPermission() int64 {
	if x != nil {
		return x.Permission
	}
	return 0
}

func (x *AddOnlineTextReq) GetTextPoster() string {
	if x != nil {
		return x.TextPoster
	}
	return ""
}

func (x *AddOnlineTextReq) GetTextName() string {
	if x != nil {
		return x.TextName
	}
	return ""
}

type AddOnlineTextResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddOnlineTextResp) Reset() {
	*x = AddOnlineTextResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOnlineTextResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOnlineTextResp) ProtoMessage() {}

func (x *AddOnlineTextResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOnlineTextResp.ProtoReflect.Descriptor instead.
func (*AddOnlineTextResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{40}
}

type UpdateOnlineTextReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`                 //在线文本自增id
	Content    string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`        //存储实际内容
	ClassID    int64  `protobuf:"varint,3,opt,name=classID,proto3" json:"classID,omitempty"`       //所属资源分类id
	Permission int64  `protobuf:"varint,4,opt,name=permission,proto3" json:"permission,omitempty"` //是否允许查看 0 no 1 yes
	TextPoster string `protobuf:"bytes,5,opt,name=textPoster,proto3" json:"textPoster,omitempty"`  // 文件头图
	TextName   string `protobuf:"bytes,6,opt,name=textName,proto3" json:"textName,omitempty"`      // 文本资源名称
}

func (x *UpdateOnlineTextReq) Reset() {
	*x = UpdateOnlineTextReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOnlineTextReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOnlineTextReq) ProtoMessage() {}

func (x *UpdateOnlineTextReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOnlineTextReq.ProtoReflect.Descriptor instead.
func (*UpdateOnlineTextReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateOnlineTextReq) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateOnlineTextReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateOnlineTextReq) GetClassID() int64 {
	if x != nil {
		return x.ClassID
	}
	return 0
}

func (x *UpdateOnlineTextReq) GetPermission() int64 {
	if x != nil {
		return x.Permission
	}
	return 0
}

func (x *UpdateOnlineTextReq) GetTextPoster() string {
	if x != nil {
		return x.TextPoster
	}
	return ""
}

func (x *UpdateOnlineTextReq) GetTextName() string {
	if x != nil {
		return x.TextName
	}
	return ""
}

type UpdateOnlineTextResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateOnlineTextResp) Reset() {
	*x = UpdateOnlineTextResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOnlineTextResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOnlineTextResp) ProtoMessage() {}

func (x *UpdateOnlineTextResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOnlineTextResp.ProtoReflect.Descriptor instead.
func (*UpdateOnlineTextResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{42}
}

type DelOnlineTextReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"` //id
}

func (x *DelOnlineTextReq) Reset() {
	*x = DelOnlineTextReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelOnlineTextReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelOnlineTextReq) ProtoMessage() {}

func (x *DelOnlineTextReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelOnlineTextReq.ProtoReflect.Descriptor instead.
func (*DelOnlineTextReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{43}
}

func (x *DelOnlineTextReq) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type DelOnlineTextResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelOnlineTextResp) Reset() {
	*x = DelOnlineTextResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelOnlineTextResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelOnlineTextResp) ProtoMessage() {}

func (x *DelOnlineTextResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelOnlineTextResp.ProtoReflect.Descriptor instead.
func (*DelOnlineTextResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{44}
}

type GetOnlineTextByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"` //id
}

func (x *GetOnlineTextByIdReq) Reset() {
	*x = GetOnlineTextByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOnlineTextByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnlineTextByIdReq) ProtoMessage() {}

func (x *GetOnlineTextByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnlineTextByIdReq.ProtoReflect.Descriptor instead.
func (*GetOnlineTextByIdReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{45}
}

func (x *GetOnlineTextByIdReq) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type GetOnlineTextByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlineText *OnlineText `protobuf:"bytes,1,opt,name=onlineText,proto3" json:"onlineText,omitempty"` //onlineText
}

func (x *GetOnlineTextByIdResp) Reset() {
	*x = GetOnlineTextByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOnlineTextByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnlineTextByIdResp) ProtoMessage() {}

func (x *GetOnlineTextByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnlineTextByIdResp.ProtoReflect.Descriptor instead.
func (*GetOnlineTextByIdResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{46}
}

func (x *GetOnlineTextByIdResp) GetOnlineText() *OnlineText {
	if x != nil {
		return x.OnlineText
	}
	return nil
}

type SearchOnlineConditionTextReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`             //page
	Limit      int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`           //limit
	Owner      int64 `protobuf:"varint,3,opt,name=owner,proto3" json:"owner,omitempty"`           //所属用户
	ClassID    int64 `protobuf:"varint,4,opt,name=classID,proto3" json:"classID,omitempty"`       //所属资源分类id
	Permission int64 `protobuf:"varint,5,opt,name=permission,proto3" json:"permission,omitempty"` //是否允许查看 0 no 1 yes
}

func (x *SearchOnlineConditionTextReq) Reset() {
	*x = SearchOnlineConditionTextReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchOnlineConditionTextReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOnlineConditionTextReq) ProtoMessage() {}

func (x *SearchOnlineConditionTextReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchOnlineConditionTextReq.ProtoReflect.Descriptor instead.
func (*SearchOnlineConditionTextReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{47}
}

func (x *SearchOnlineConditionTextReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchOnlineConditionTextReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchOnlineConditionTextReq) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *SearchOnlineConditionTextReq) GetClassID() int64 {
	if x != nil {
		return x.ClassID
	}
	return 0
}

func (x *SearchOnlineConditionTextReq) GetPermission() int64 {
	if x != nil {
		return x.Permission
	}
	return 0
}

type SearchOnlineTextConditionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlineText []*OnlineText `protobuf:"bytes,1,rep,name=onlineText,proto3" json:"onlineText,omitempty"` //onlineText
}

func (x *SearchOnlineTextConditionResp) Reset() {
	*x = SearchOnlineTextConditionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchOnlineTextConditionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOnlineTextConditionResp) ProtoMessage() {}

func (x *SearchOnlineTextConditionResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchOnlineTextConditionResp.ProtoReflect.Descriptor instead.
func (*SearchOnlineTextConditionResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{48}
}

func (x *SearchOnlineTextConditionResp) GetOnlineText() []*OnlineText {
	if x != nil {
		return x.OnlineText
	}
	return nil
}

// --------------------------------资源评论信息--------------------------------
type ResComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`                 //评论自增id
	Owner      int64  `protobuf:"varint,2,opt,name=owner,proto3" json:"owner,omitempty"`           //评论所属人信息
	ResourceID int64  `protobuf:"varint,3,opt,name=resourceID,proto3" json:"resourceID,omitempty"` //资源id
	Content    string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`        //评论内容
	CreateTime int64  `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime,omitempty"` //创建时间
	UpdateTime int64  `protobuf:"varint,6,opt,name=updateTime,proto3" json:"updateTime,omitempty"` //更新时间
}

func (x *ResComment) Reset() {
	*x = ResComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResComment) ProtoMessage() {}

func (x *ResComment) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResComment.ProtoReflect.Descriptor instead.
func (*ResComment) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{49}
}

func (x *ResComment) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ResComment) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *ResComment) GetResourceID() int64 {
	if x != nil {
		return x.ResourceID
	}
	return 0
}

func (x *ResComment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ResComment) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ResComment) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type AddResCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner      int64  `protobuf:"varint,1,opt,name=owner,proto3" json:"owner,omitempty"`           //评论所属人信息
	ResourceID int64  `protobuf:"varint,2,opt,name=resourceID,proto3" json:"resourceID,omitempty"` //资源id
	Content    string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`        //评论内容
}

func (x *AddResCommentReq) Reset() {
	*x = AddResCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddResCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResCommentReq) ProtoMessage() {}

func (x *AddResCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResCommentReq.ProtoReflect.Descriptor instead.
func (*AddResCommentReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{50}
}

func (x *AddResCommentReq) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *AddResCommentReq) GetResourceID() int64 {
	if x != nil {
		return x.ResourceID
	}
	return 0
}

func (x *AddResCommentReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type AddResCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddResCommentResp) Reset() {
	*x = AddResCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddResCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResCommentResp) ProtoMessage() {}

func (x *AddResCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResCommentResp.ProtoReflect.Descriptor instead.
func (*AddResCommentResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{51}
}

type UpdateResCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`                 //评论自增id
	Owner      int64  `protobuf:"varint,2,opt,name=owner,proto3" json:"owner,omitempty"`           //评论所属人信息
	ResourceID int64  `protobuf:"varint,3,opt,name=resourceID,proto3" json:"resourceID,omitempty"` //资源id
	Content    string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`        //评论内容
}

func (x *UpdateResCommentReq) Reset() {
	*x = UpdateResCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResCommentReq) ProtoMessage() {}

func (x *UpdateResCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResCommentReq.ProtoReflect.Descriptor instead.
func (*UpdateResCommentReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{52}
}

func (x *UpdateResCommentReq) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateResCommentReq) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *UpdateResCommentReq) GetResourceID() int64 {
	if x != nil {
		return x.ResourceID
	}
	return 0
}

func (x *UpdateResCommentReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type UpdateResCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateResCommentResp) Reset() {
	*x = UpdateResCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResCommentResp) ProtoMessage() {}

func (x *UpdateResCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResCommentResp.ProtoReflect.Descriptor instead.
func (*UpdateResCommentResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{53}
}

type DelResCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"` //id
}

func (x *DelResCommentReq) Reset() {
	*x = DelResCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelResCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelResCommentReq) ProtoMessage() {}

func (x *DelResCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelResCommentReq.ProtoReflect.Descriptor instead.
func (*DelResCommentReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{54}
}

func (x *DelResCommentReq) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type DelResCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelResCommentResp) Reset() {
	*x = DelResCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelResCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelResCommentResp) ProtoMessage() {}

func (x *DelResCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelResCommentResp.ProtoReflect.Descriptor instead.
func (*DelResCommentResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{55}
}

type GetResCommentByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"` //id
}

func (x *GetResCommentByIdReq) Reset() {
	*x = GetResCommentByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResCommentByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResCommentByIdReq) ProtoMessage() {}

func (x *GetResCommentByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResCommentByIdReq.ProtoReflect.Descriptor instead.
func (*GetResCommentByIdReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{56}
}

func (x *GetResCommentByIdReq) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type GetResCommentByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResComment *ResComment `protobuf:"bytes,1,opt,name=resComment,proto3" json:"resComment,omitempty"` //resComment
}

func (x *GetResCommentByIdResp) Reset() {
	*x = GetResCommentByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResCommentByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResCommentByIdResp) ProtoMessage() {}

func (x *GetResCommentByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResCommentByIdResp.ProtoReflect.Descriptor instead.
func (*GetResCommentByIdResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{57}
}

func (x *GetResCommentByIdResp) GetResComment() *ResComment {
	if x != nil {
		return x.ResComment
	}
	return nil
}

// 支持资源信息
type SearchResCommentByUserOrResIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`             //page
	Limit      int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`           //limit
	Owner      int64 `protobuf:"varint,3,opt,name=owner,proto3" json:"owner,omitempty"`           //评论所属人信息
	ResourceID int64 `protobuf:"varint,4,opt,name=resourceID,proto3" json:"resourceID,omitempty"` //资源id
}

func (x *SearchResCommentByUserOrResIdReq) Reset() {
	*x = SearchResCommentByUserOrResIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResCommentByUserOrResIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResCommentByUserOrResIdReq) ProtoMessage() {}

func (x *SearchResCommentByUserOrResIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResCommentByUserOrResIdReq.ProtoReflect.Descriptor instead.
func (*SearchResCommentByUserOrResIdReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{58}
}

func (x *SearchResCommentByUserOrResIdReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchResCommentByUserOrResIdReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchResCommentByUserOrResIdReq) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *SearchResCommentByUserOrResIdReq) GetResourceID() int64 {
	if x != nil {
		return x.ResourceID
	}
	return 0
}

type SearchResCommentByUserOrResIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResComment []*ResComment `protobuf:"bytes,1,rep,name=resComment,proto3" json:"resComment,omitempty"` //resComment
}

func (x *SearchResCommentByUserOrResIdResp) Reset() {
	*x = SearchResCommentByUserOrResIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResCommentByUserOrResIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResCommentByUserOrResIdResp) ProtoMessage() {}

func (x *SearchResCommentByUserOrResIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResCommentByUserOrResIdResp.ProtoReflect.Descriptor instead.
func (*SearchResCommentByUserOrResIdResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{59}
}

func (x *SearchResCommentByUserOrResIdResp) GetResComment() []*ResComment {
	if x != nil {
		return x.ResComment
	}
	return nil
}

type GetFilResourcesUSerIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourcesId int64 `protobuf:"varint,1,opt,name=resourcesId,proto3" json:"resourcesId,omitempty"` // 产品id
}

func (x *GetFilResourcesUSerIdReq) Reset() {
	*x = GetFilResourcesUSerIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilResourcesUSerIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilResourcesUSerIdReq) ProtoMessage() {}

func (x *GetFilResourcesUSerIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilResourcesUSerIdReq.ProtoReflect.Descriptor instead.
func (*GetFilResourcesUSerIdReq) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{60}
}

func (x *GetFilResourcesUSerIdReq) GetResourcesId() int64 {
	if x != nil {
		return x.ResourcesId
	}
	return 0
}

type GetFilResourcesUSerIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"` // 用户id
}

func (x *GetFilResourcesUSerIdResp) Reset() {
	*x = GetFilResourcesUSerIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resourcesrpc_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilResourcesUSerIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilResourcesUSerIdResp) ProtoMessage() {}

func (x *GetFilResourcesUSerIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_resourcesrpc_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilResourcesUSerIdResp.ProtoReflect.Descriptor instead.
func (*GetFilResourcesUSerIdResp) Descriptor() ([]byte, []int) {
	return file_resourcesrpc_proto_rawDescGZIP(), []int{61}
}

func (x *GetFilResourcesUSerIdResp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

var File_resourcesrpc_proto protoreflect.FileDescriptor

var file_resourcesrpc_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0xda, 0x01, 0x0a, 0x0e, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x24,
	0x0a, 0x0d, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x17,
	0x0a, 0x15, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xa3, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x44, 0x12, 0x24, 0x0a,
	0x0d, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x1a, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x44, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2a, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x22, 0x57, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xc0, 0x01, 0x0a, 0x1c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x57,
	0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4b, 0x65, 0x79, 0x57, 0x6f,
	0x72, 0x64, 0x22, 0xaf, 0x01, 0x0a, 0x1d, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x0a, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x73, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x73, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0xda, 0x01, 0x0a, 0x16, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x75,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x72, 0x65, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x22, 0x1c, 0x0a, 0x1a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x22,
	0x63, 0x0a, 0x1b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44,
	0x0a, 0x0f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x52, 0x0f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x63, 0x4e, 0x75, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x69, 0x63, 0x4e, 0x75, 0x6d, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x8f, 0x01, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x63, 0x4e,
	0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x69, 0x63, 0x4e, 0x75, 0x6d,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x22, 0xa2, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x75, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x75,
	0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x69, 0x63, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70,
	0x69, 0x63, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1d, 0x0a, 0x0b, 0x44, 0x65,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x44, 0x65, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1f, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x24, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x55,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x55, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x82, 0x03,
	0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x6f, 0x62, 0x66, 0x75, 0x73, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x62, 0x66, 0x75, 0x73, 0x63, 0x61, 0x74, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69,
	0x6e, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xa4, 0x02, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x62, 0x66, 0x75, 0x73, 0x63, 0x61,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x62,
	0x66, 0x75, 0x73, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69,
	0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12,
	0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x22, 0x0d, 0x0a, 0x0b, 0x41, 0x64, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0xb7, 0x02, 0x0a, 0x0d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x6f, 0x62, 0x66, 0x75, 0x73, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x62, 0x66, 0x75, 0x73, 0x63, 0x61, 0x74, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69,
	0x6e, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x22, 0x10, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x1c, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x44, 0x22, 0x0d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x49, 0x44, 0x22, 0x2f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x22, 0x37, 0x0a,
	0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x2f, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x22, 0xb6, 0x02, 0x0a, 0x0a,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x1e,
	0x0a, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65,
	0x78, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x78, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x79, 0x70,
	0x65, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74,
	0x79, 0x70, 0x65, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x50, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x13, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0xb5, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x16, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x22, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x26, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x44, 0x22, 0x47, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e,
	0x0a, 0x0a, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x52, 0x0a, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x22, 0x98,
	0x01, 0x0a, 0x1c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x1d, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0a,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x0a, 0x52,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x10, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x13, 0x0a,
	0x11, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x75, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x22, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x44, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x44, 0x22, 0x47, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x72,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x20,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x52, 0x65, 0x73, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44,
	0x22, 0x53, 0x0a, 0x21, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x52, 0x65, 0x73, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x55, 0x53, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x55, 0x53, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x32, 0xc2, 0x0f, 0x0a, 0x0c, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x72, 0x70, 0x63, 0x12, 0x48, 0x0a, 0x11, 0x41, 0x64, 0x64,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64,
	0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x54, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c,
	0x6c, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x63, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x50, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x50, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d,
	0x0a, 0x08, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x49, 0x64, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x55,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x18, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4b, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x55, 0x53, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x55, 0x53, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x55, 0x53, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x64, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x45, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x18, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x60, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x20, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x21, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x45, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x6c, 0x0a, 0x1d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x52, 0x65, 0x73, 0x49, 0x64,
	0x12, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x52, 0x65,
	0x73, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x72, 0x52, 0x65, 0x73, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a,
	0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_resourcesrpc_proto_rawDescOnce sync.Once
	file_resourcesrpc_proto_rawDescData = file_resourcesrpc_proto_rawDesc
)

func file_resourcesrpc_proto_rawDescGZIP() []byte {
	file_resourcesrpc_proto_rawDescOnce.Do(func() {
		file_resourcesrpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_resourcesrpc_proto_rawDescData)
	})
	return file_resourcesrpc_proto_rawDescData
}

var file_resourcesrpc_proto_msgTypes = make([]protoimpl.MessageInfo, 62)
var file_resourcesrpc_proto_goTypes = []interface{}{
	(*Classification)(nil),                    // 0: pb.Classification
	(*AddClassificationReq)(nil),              // 1: pb.AddClassificationReq
	(*AddClassificationResp)(nil),             // 2: pb.AddClassificationResp
	(*UpdateClassificationReq)(nil),           // 3: pb.UpdateClassificationReq
	(*UpdateClassificationResp)(nil),          // 4: pb.UpdateClassificationResp
	(*DelClassificationReq)(nil),              // 5: pb.DelClassificationReq
	(*DelClassificationResp)(nil),             // 6: pb.DelClassificationResp
	(*GetClassificationByIdReq)(nil),          // 7: pb.GetClassificationByIdReq
	(*GetClassificationByIdResp)(nil),         // 8: pb.GetClassificationByIdResp
	(*ClassificationDataByPagesReq)(nil),      // 9: pb.ClassificationDataByPagesReq
	(*ClassificationDataByPagesResp)(nil),     // 10: pb.ClassificationDataByPagesResp
	(*ClassificationTreeMenu)(nil),            // 11: pb.ClassificationTreeMenu
	(*SearchClassificationAllReq)(nil),        // 12: pb.SearchClassificationAllReq
	(*SearchClassificationAllResp)(nil),       // 13: pb.SearchClassificationAllResp
	(*Count)(nil),                             // 14: pb.Count
	(*AddCountReq)(nil),                       // 15: pb.AddCountReq
	(*AddCountResp)(nil),                      // 16: pb.AddCountResp
	(*UpdateCountReq)(nil),                    // 17: pb.UpdateCountReq
	(*UpdateCountResp)(nil),                   // 18: pb.UpdateCountResp
	(*DelCountReq)(nil),                       // 19: pb.DelCountReq
	(*DelCountResp)(nil),                      // 20: pb.DelCountResp
	(*GetCountByIdReq)(nil),                   // 21: pb.GetCountByIdReq
	(*GetCountByIdResp)(nil),                  // 22: pb.GetCountByIdResp
	(*GetCountByUIdReq)(nil),                  // 23: pb.GetCountByUIdReq
	(*GetCountByUIdResp)(nil),                 // 24: pb.GetCountByUIdResp
	(*File)(nil),                              // 25: pb.File
	(*AddFileReq)(nil),                        // 26: pb.AddFileReq
	(*AddFileResp)(nil),                       // 27: pb.AddFileResp
	(*UpdateFileReq)(nil),                     // 28: pb.UpdateFileReq
	(*UpdateFileResp)(nil),                    // 29: pb.UpdateFileResp
	(*DelFileReq)(nil),                        // 30: pb.DelFileReq
	(*DelFileResp)(nil),                       // 31: pb.DelFileResp
	(*GetFileByIdReq)(nil),                    // 32: pb.GetFileByIdReq
	(*GetFileByIdResp)(nil),                   // 33: pb.GetFileByIdResp
	(*SearchFileConditionReq)(nil),            // 34: pb.SearchFileConditionReq
	(*SearchFileConditionResp)(nil),           // 35: pb.SearchFileConditionResp
	(*CheckDownloadAllowReq)(nil),             // 36: pb.CheckDownloadAllowReq
	(*CheckDownloadAllowResp)(nil),            // 37: pb.CheckDownloadAllowResp
	(*OnlineText)(nil),                        // 38: pb.OnlineText
	(*AddOnlineTextReq)(nil),                  // 39: pb.AddOnlineTextReq
	(*AddOnlineTextResp)(nil),                 // 40: pb.AddOnlineTextResp
	(*UpdateOnlineTextReq)(nil),               // 41: pb.UpdateOnlineTextReq
	(*UpdateOnlineTextResp)(nil),              // 42: pb.UpdateOnlineTextResp
	(*DelOnlineTextReq)(nil),                  // 43: pb.DelOnlineTextReq
	(*DelOnlineTextResp)(nil),                 // 44: pb.DelOnlineTextResp
	(*GetOnlineTextByIdReq)(nil),              // 45: pb.GetOnlineTextByIdReq
	(*GetOnlineTextByIdResp)(nil),             // 46: pb.GetOnlineTextByIdResp
	(*SearchOnlineConditionTextReq)(nil),      // 47: pb.SearchOnlineConditionTextReq
	(*SearchOnlineTextConditionResp)(nil),     // 48: pb.SearchOnlineTextConditionResp
	(*ResComment)(nil),                        // 49: pb.ResComment
	(*AddResCommentReq)(nil),                  // 50: pb.AddResCommentReq
	(*AddResCommentResp)(nil),                 // 51: pb.AddResCommentResp
	(*UpdateResCommentReq)(nil),               // 52: pb.UpdateResCommentReq
	(*UpdateResCommentResp)(nil),              // 53: pb.UpdateResCommentResp
	(*DelResCommentReq)(nil),                  // 54: pb.DelResCommentReq
	(*DelResCommentResp)(nil),                 // 55: pb.DelResCommentResp
	(*GetResCommentByIdReq)(nil),              // 56: pb.GetResCommentByIdReq
	(*GetResCommentByIdResp)(nil),             // 57: pb.GetResCommentByIdResp
	(*SearchResCommentByUserOrResIdReq)(nil),  // 58: pb.SearchResCommentByUserOrResIdReq
	(*SearchResCommentByUserOrResIdResp)(nil), // 59: pb.SearchResCommentByUserOrResIdResp
	(*GetFilResourcesUSerIdReq)(nil),          // 60: pb.GetFilResourcesUSerIdReq
	(*GetFilResourcesUSerIdResp)(nil),         // 61: pb.GetFilResourcesUSerIdResp
}
var file_resourcesrpc_proto_depIdxs = []int32{
	0,  // 0: pb.GetClassificationByIdResp.classification:type_name -> pb.Classification
	25, // 1: pb.ClassificationDataByPagesResp.files:type_name -> pb.File
	38, // 2: pb.ClassificationDataByPagesResp.onlineText:type_name -> pb.OnlineText
	11, // 3: pb.ClassificationTreeMenu.children:type_name -> pb.ClassificationTreeMenu
	11, // 4: pb.SearchClassificationAllResp.classifications:type_name -> pb.ClassificationTreeMenu
	14, // 5: pb.GetCountByIdResp.count:type_name -> pb.Count
	14, // 6: pb.GetCountByUIdResp.count:type_name -> pb.Count
	25, // 7: pb.GetFileByIdResp.file:type_name -> pb.File
	25, // 8: pb.SearchFileConditionResp.file:type_name -> pb.File
	38, // 9: pb.GetOnlineTextByIdResp.onlineText:type_name -> pb.OnlineText
	38, // 10: pb.SearchOnlineTextConditionResp.onlineText:type_name -> pb.OnlineText
	49, // 11: pb.GetResCommentByIdResp.resComment:type_name -> pb.ResComment
	49, // 12: pb.SearchResCommentByUserOrResIdResp.resComment:type_name -> pb.ResComment
	1,  // 13: pb.resourcesrpc.AddClassification:input_type -> pb.AddClassificationReq
	3,  // 14: pb.resourcesrpc.UpdateClassification:input_type -> pb.UpdateClassificationReq
	5,  // 15: pb.resourcesrpc.DelClassification:input_type -> pb.DelClassificationReq
	7,  // 16: pb.resourcesrpc.GetClassificationById:input_type -> pb.GetClassificationByIdReq
	12, // 17: pb.resourcesrpc.SearchClassificationAll:input_type -> pb.SearchClassificationAllReq
	9,  // 18: pb.resourcesrpc.GetClassificationDataByPages:input_type -> pb.ClassificationDataByPagesReq
	15, // 19: pb.resourcesrpc.AddCount:input_type -> pb.AddCountReq
	17, // 20: pb.resourcesrpc.UpdateCount:input_type -> pb.UpdateCountReq
	19, // 21: pb.resourcesrpc.DelCount:input_type -> pb.DelCountReq
	21, // 22: pb.resourcesrpc.GetCountById:input_type -> pb.GetCountByIdReq
	23, // 23: pb.resourcesrpc.GetCountByUId:input_type -> pb.GetCountByUIdReq
	26, // 24: pb.resourcesrpc.AddFile:input_type -> pb.AddFileReq
	28, // 25: pb.resourcesrpc.UpdateFile:input_type -> pb.UpdateFileReq
	30, // 26: pb.resourcesrpc.DelFile:input_type -> pb.DelFileReq
	32, // 27: pb.resourcesrpc.GetFileById:input_type -> pb.GetFileByIdReq
	34, // 28: pb.resourcesrpc.SearchFileConditionPages:input_type -> pb.SearchFileConditionReq
	36, // 29: pb.resourcesrpc.CheckDownloadAllow:input_type -> pb.CheckDownloadAllowReq
	60, // 30: pb.resourcesrpc.GetFilResourcesUSerId:input_type -> pb.GetFilResourcesUSerIdReq
	39, // 31: pb.resourcesrpc.AddOnlineText:input_type -> pb.AddOnlineTextReq
	41, // 32: pb.resourcesrpc.UpdateOnlineText:input_type -> pb.UpdateOnlineTextReq
	43, // 33: pb.resourcesrpc.DelOnlineText:input_type -> pb.DelOnlineTextReq
	45, // 34: pb.resourcesrpc.GetOnlineTextById:input_type -> pb.GetOnlineTextByIdReq
	47, // 35: pb.resourcesrpc.SearchOnlineConditionText:input_type -> pb.SearchOnlineConditionTextReq
	50, // 36: pb.resourcesrpc.AddResComment:input_type -> pb.AddResCommentReq
	52, // 37: pb.resourcesrpc.UpdateResComment:input_type -> pb.UpdateResCommentReq
	54, // 38: pb.resourcesrpc.DelResComment:input_type -> pb.DelResCommentReq
	56, // 39: pb.resourcesrpc.GetResCommentById:input_type -> pb.GetResCommentByIdReq
	58, // 40: pb.resourcesrpc.SearchResCommentByUserOrResId:input_type -> pb.SearchResCommentByUserOrResIdReq
	2,  // 41: pb.resourcesrpc.AddClassification:output_type -> pb.AddClassificationResp
	4,  // 42: pb.resourcesrpc.UpdateClassification:output_type -> pb.UpdateClassificationResp
	6,  // 43: pb.resourcesrpc.DelClassification:output_type -> pb.DelClassificationResp
	8,  // 44: pb.resourcesrpc.GetClassificationById:output_type -> pb.GetClassificationByIdResp
	13, // 45: pb.resourcesrpc.SearchClassificationAll:output_type -> pb.SearchClassificationAllResp
	10, // 46: pb.resourcesrpc.GetClassificationDataByPages:output_type -> pb.ClassificationDataByPagesResp
	16, // 47: pb.resourcesrpc.AddCount:output_type -> pb.AddCountResp
	18, // 48: pb.resourcesrpc.UpdateCount:output_type -> pb.UpdateCountResp
	20, // 49: pb.resourcesrpc.DelCount:output_type -> pb.DelCountResp
	22, // 50: pb.resourcesrpc.GetCountById:output_type -> pb.GetCountByIdResp
	24, // 51: pb.resourcesrpc.GetCountByUId:output_type -> pb.GetCountByUIdResp
	27, // 52: pb.resourcesrpc.AddFile:output_type -> pb.AddFileResp
	29, // 53: pb.resourcesrpc.UpdateFile:output_type -> pb.UpdateFileResp
	31, // 54: pb.resourcesrpc.DelFile:output_type -> pb.DelFileResp
	33, // 55: pb.resourcesrpc.GetFileById:output_type -> pb.GetFileByIdResp
	35, // 56: pb.resourcesrpc.SearchFileConditionPages:output_type -> pb.SearchFileConditionResp
	37, // 57: pb.resourcesrpc.CheckDownloadAllow:output_type -> pb.CheckDownloadAllowResp
	61, // 58: pb.resourcesrpc.GetFilResourcesUSerId:output_type -> pb.GetFilResourcesUSerIdResp
	40, // 59: pb.resourcesrpc.AddOnlineText:output_type -> pb.AddOnlineTextResp
	42, // 60: pb.resourcesrpc.UpdateOnlineText:output_type -> pb.UpdateOnlineTextResp
	44, // 61: pb.resourcesrpc.DelOnlineText:output_type -> pb.DelOnlineTextResp
	46, // 62: pb.resourcesrpc.GetOnlineTextById:output_type -> pb.GetOnlineTextByIdResp
	48, // 63: pb.resourcesrpc.SearchOnlineConditionText:output_type -> pb.SearchOnlineTextConditionResp
	51, // 64: pb.resourcesrpc.AddResComment:output_type -> pb.AddResCommentResp
	53, // 65: pb.resourcesrpc.UpdateResComment:output_type -> pb.UpdateResCommentResp
	55, // 66: pb.resourcesrpc.DelResComment:output_type -> pb.DelResCommentResp
	57, // 67: pb.resourcesrpc.GetResCommentById:output_type -> pb.GetResCommentByIdResp
	59, // 68: pb.resourcesrpc.SearchResCommentByUserOrResId:output_type -> pb.SearchResCommentByUserOrResIdResp
	41, // [41:69] is the sub-list for method output_type
	13, // [13:41] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_resourcesrpc_proto_init() }
func file_resourcesrpc_proto_init() {
	if File_resourcesrpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_resourcesrpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Classification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddClassificationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddClassificationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClassificationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClassificationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelClassificationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelClassificationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClassificationByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClassificationByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClassificationDataByPagesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClassificationDataByPagesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClassificationTreeMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchClassificationAllReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchClassificationAllResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Count); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountByUIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountByUIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFileConditionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFileConditionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckDownloadAllowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckDownloadAllowResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOnlineTextReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOnlineTextResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOnlineTextReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOnlineTextResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelOnlineTextReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelOnlineTextResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOnlineTextByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOnlineTextByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchOnlineConditionTextReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchOnlineTextConditionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddResCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddResCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelResCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelResCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResCommentByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResCommentByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResCommentByUserOrResIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResCommentByUserOrResIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilResourcesUSerIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resourcesrpc_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilResourcesUSerIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_resourcesrpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   62,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_resourcesrpc_proto_goTypes,
		DependencyIndexes: file_resourcesrpc_proto_depIdxs,
		MessageInfos:      file_resourcesrpc_proto_msgTypes,
	}.Build()
	File_resourcesrpc_proto = out.File
	file_resourcesrpc_proto_rawDesc = nil
	file_resourcesrpc_proto_goTypes = nil
	file_resourcesrpc_proto_depIdxs = nil
}
