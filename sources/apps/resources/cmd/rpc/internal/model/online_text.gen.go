// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameOnlineText = "online_text"

// OnlineText mapped from table <online_text>
type OnlineText struct {
	ID         int64          `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"`                      // 在线文本自增id
	UUID       int64          `gorm:"column:uuid;not null" json:"uuid"`                                       // 文本uuid
	TextName   *string        `gorm:"column:text_name" json:"text_name"`                                      // 文档名称
	TextPoster *string        `gorm:"column:text_poster" json:"text_poster"`                                  // 文本头图
	TypeSuffix int64          `gorm:"column:type_suffix;not null" json:"type_suffix"`                         // 文本输入格式（0 markdown）
	Owner      int64          `gorm:"column:owner;not null" json:"owner"`                                     // 所属用户
	Content    *[]byte        `gorm:"column:content" json:"content"`                                          // 存储实际内容
	ClassID    int64          `gorm:"column:class_id;not null" json:"class_id"`                               // 所属资源分类id
	Permission *int64         `gorm:"column:permission;not null;default:1" json:"permission"`                 // 是否允许查看 0 no 1 yes
	CreateTime *time.Time     `gorm:"column:create_time;type:int unsigned;autoCreateTime" json:"create_time"` // 创建时间
	UpdateTime *time.Time     `gorm:"column:update_time;type:int unsigned;autoUpdateTime" json:"update_time"` // 更新时间
	DeleteTime gorm.DeletedAt `gorm:"column:delete_time" json:"delete_time"`                                  // 删除时间
}

// TableName OnlineText's table name
func (*OnlineText) TableName() string {
	return TableNameOnlineText
}
