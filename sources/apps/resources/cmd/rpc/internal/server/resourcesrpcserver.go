// Code generated by goctl. DO NOT EDIT.
// Source: resourcesrpc.proto

package server

import (
	"context"

	"github.com/baiyz0825/school-share-buy-backend/apps/resources/cmd/rpc/internal/logic"
	"github.com/baiyz0825/school-share-buy-backend/apps/resources/cmd/rpc/internal/svc"
	"github.com/baiyz0825/school-share-buy-backend/apps/resources/cmd/rpc/pb"
)

type ResourcesrpcServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedResourcesrpcServer
}

func NewResourcesrpcServer(svcCtx *svc.ServiceContext) *ResourcesrpcServer {
	return &ResourcesrpcServer{
		svcCtx: svcCtx,
	}
}

// -----------------------资源分类信息-----------------------
func (s *ResourcesrpcServer) AddClassification(ctx context.Context, in *pb.AddClassificationReq) (*pb.AddClassificationResp, error) {
	l := logic.NewAddClassificationLogic(ctx, s.svcCtx)
	return l.AddClassification(in)
}

func (s *ResourcesrpcServer) UpdateClassification(ctx context.Context, in *pb.UpdateClassificationReq) (*pb.UpdateClassificationResp, error) {
	l := logic.NewUpdateClassificationLogic(ctx, s.svcCtx)
	return l.UpdateClassification(in)
}

func (s *ResourcesrpcServer) DelClassification(ctx context.Context, in *pb.DelClassificationReq) (*pb.DelClassificationResp, error) {
	l := logic.NewDelClassificationLogic(ctx, s.svcCtx)
	return l.DelClassification(in)
}

func (s *ResourcesrpcServer) GetClassificationById(ctx context.Context, in *pb.GetClassificationByIdReq) (*pb.GetClassificationByIdResp, error) {
	l := logic.NewGetClassificationByIdLogic(ctx, s.svcCtx)
	return l.GetClassificationById(in)
}

// 查询全部分类
func (s *ResourcesrpcServer) SearchClassificationAll(ctx context.Context, in *pb.SearchClassificationAllReq) (*pb.SearchClassificationAllResp, error) {
	l := logic.NewSearchClassificationAllLogic(ctx, s.svcCtx)
	return l.SearchClassificationAll(in)
}

// 分类查询分类id下的资源
func (s *ResourcesrpcServer) GetClassificationDataByPages(ctx context.Context, in *pb.ClassificationDataByPagesReq) (*pb.ClassificationDataByPagesResp, error) {
	l := logic.NewGetClassificationDataByPagesLogic(ctx, s.svcCtx)
	return l.GetClassificationDataByPages(in)
}

// -----------------------用户上传资源量统计信息-----------------------
func (s *ResourcesrpcServer) AddCount(ctx context.Context, in *pb.AddCountReq) (*pb.AddCountResp, error) {
	l := logic.NewAddCountLogic(ctx, s.svcCtx)
	return l.AddCount(in)
}

func (s *ResourcesrpcServer) UpdateCount(ctx context.Context, in *pb.UpdateCountReq) (*pb.UpdateCountResp, error) {
	l := logic.NewUpdateCountLogic(ctx, s.svcCtx)
	return l.UpdateCount(in)
}

func (s *ResourcesrpcServer) DelCount(ctx context.Context, in *pb.DelCountReq) (*pb.DelCountResp, error) {
	l := logic.NewDelCountLogic(ctx, s.svcCtx)
	return l.DelCount(in)
}

func (s *ResourcesrpcServer) GetCountById(ctx context.Context, in *pb.GetCountByIdReq) (*pb.GetCountByIdResp, error) {
	l := logic.NewGetCountByIdLogic(ctx, s.svcCtx)
	return l.GetCountById(in)
}

func (s *ResourcesrpcServer) GetCountByUId(ctx context.Context, in *pb.GetCountByUIdReq) (*pb.GetCountByUIdResp, error) {
	l := logic.NewGetCountByUIdLogic(ctx, s.svcCtx)
	return l.GetCountByUId(in)
}

// -----------------------文件资源存储表（非文本类型）-----------------------
func (s *ResourcesrpcServer) AddFile(ctx context.Context, in *pb.AddFileReq) (*pb.AddFileResp, error) {
	l := logic.NewAddFileLogic(ctx, s.svcCtx)
	return l.AddFile(in)
}

func (s *ResourcesrpcServer) UpdateFile(ctx context.Context, in *pb.UpdateFileReq) (*pb.UpdateFileResp, error) {
	l := logic.NewUpdateFileLogic(ctx, s.svcCtx)
	return l.UpdateFile(in)
}

func (s *ResourcesrpcServer) DelFile(ctx context.Context, in *pb.DelFileReq) (*pb.DelFileResp, error) {
	l := logic.NewDelFileLogic(ctx, s.svcCtx)
	return l.DelFile(in)
}

func (s *ResourcesrpcServer) GetFileById(ctx context.Context, in *pb.GetFileByIdReq) (*pb.GetFileByIdResp, error) {
	l := logic.NewGetFileByIdLogic(ctx, s.svcCtx)
	return l.GetFileById(in)
}

// 多条件查询（大类，用户id / 全部文件中筛选）
func (s *ResourcesrpcServer) SearchFileConditionPages(ctx context.Context, in *pb.SearchFileConditionReq) (*pb.SearchFileConditionResp, error) {
	l := logic.NewSearchFileConditionPagesLogic(ctx, s.svcCtx)
	return l.SearchFileConditionPages(in)
}

// 检查文件是否允许下载
func (s *ResourcesrpcServer) CheckDownloadAllow(ctx context.Context, in *pb.CheckDownloadAllowReq) (*pb.CheckDownloadAllowResp, error) {
	l := logic.NewCheckDownloadAllowLogic(ctx, s.svcCtx)
	return l.CheckDownloadAllow(in)
}

func (s *ResourcesrpcServer) GetFilResourcesUSerId(ctx context.Context, in *pb.GetFilResourcesUSerIdReq) (*pb.GetFilResourcesUSerIdResp, error) {
	l := logic.NewGetFilResourcesUSerIdLogic(ctx, s.svcCtx)
	return l.GetFilResourcesUSerId(in)
}

// -----------------------在线文本资源信息-----------------------
func (s *ResourcesrpcServer) AddOnlineText(ctx context.Context, in *pb.AddOnlineTextReq) (*pb.AddOnlineTextResp, error) {
	l := logic.NewAddOnlineTextLogic(ctx, s.svcCtx)
	return l.AddOnlineText(in)
}

func (s *ResourcesrpcServer) UpdateOnlineText(ctx context.Context, in *pb.UpdateOnlineTextReq) (*pb.UpdateOnlineTextResp, error) {
	l := logic.NewUpdateOnlineTextLogic(ctx, s.svcCtx)
	return l.UpdateOnlineText(in)
}

func (s *ResourcesrpcServer) DelOnlineText(ctx context.Context, in *pb.DelOnlineTextReq) (*pb.DelOnlineTextResp, error) {
	l := logic.NewDelOnlineTextLogic(ctx, s.svcCtx)
	return l.DelOnlineText(in)
}

func (s *ResourcesrpcServer) GetOnlineTextById(ctx context.Context, in *pb.GetOnlineTextByIdReq) (*pb.GetOnlineTextByIdResp, error) {
	l := logic.NewGetOnlineTextByIdLogic(ctx, s.svcCtx)
	return l.GetOnlineTextById(in)
}

// 多条件查询（大类，用户id / 全部文件中筛选）
func (s *ResourcesrpcServer) SearchOnlineConditionText(ctx context.Context, in *pb.SearchOnlineConditionTextReq) (*pb.SearchOnlineTextConditionResp, error) {
	l := logic.NewSearchOnlineConditionTextLogic(ctx, s.svcCtx)
	return l.SearchOnlineConditionText(in)
}

// -----------------------资源评论信息-----------------------
func (s *ResourcesrpcServer) AddResComment(ctx context.Context, in *pb.AddResCommentReq) (*pb.AddResCommentResp, error) {
	l := logic.NewAddResCommentLogic(ctx, s.svcCtx)
	return l.AddResComment(in)
}

func (s *ResourcesrpcServer) UpdateResComment(ctx context.Context, in *pb.UpdateResCommentReq) (*pb.UpdateResCommentResp, error) {
	l := logic.NewUpdateResCommentLogic(ctx, s.svcCtx)
	return l.UpdateResComment(in)
}

func (s *ResourcesrpcServer) DelResComment(ctx context.Context, in *pb.DelResCommentReq) (*pb.DelResCommentResp, error) {
	l := logic.NewDelResCommentLogic(ctx, s.svcCtx)
	return l.DelResComment(in)
}

func (s *ResourcesrpcServer) GetResCommentById(ctx context.Context, in *pb.GetResCommentByIdReq) (*pb.GetResCommentByIdResp, error) {
	l := logic.NewGetResCommentByIdLogic(ctx, s.svcCtx)
	return l.GetResCommentById(in)
}

// 查询某一个资源下评论 ， 查询用户全部评论
func (s *ResourcesrpcServer) SearchResCommentByUserOrResId(ctx context.Context, in *pb.SearchResCommentByUserOrResIdReq) (*pb.SearchResCommentByUserOrResIdResp, error) {
	l := logic.NewSearchResCommentByUserOrResIdLogic(ctx, s.svcCtx)
	return l.SearchResCommentByUserOrResId(in)
}
