// Code generated by goctl. DO NOT EDIT.
package types

type Product struct {
	ID          int64   `json:"id"`
	UUID        int64   `json:"uuid"`
	Name        string  `json:"name"`
	FileType    int64   `json:"fileType"`
	PriductBind int64   `json:"priductBind"`
	Owner       int64   `json:"owner"`
	Price       float64 `json:"price"`
	Saled       int64   `json:"saled"`
	CreateTime  int64   `json:"createTime"`
	UpdateTime  int64   `json:"updateTime"`
}

type SearchProductByConditionReq struct {
	Page        int64   `json:"page" validate:"required,gt=0"`
	Limit       int64   `json:"limit" validate:"required,gt=0"`
	ProductType int64   `json:"productType,optional"`
	Name        string  `json:"name,optional"`
	BottonPrice float64 `json:"bottonPrice,optional"`
	TopPrice    float64 `json:"topPrice,optional"`
	Desc        bool    `json:"desc,optional"`
}

type SearchProductByConditionResp struct {
	Products []Product `json:"products"`
}

type AddProductReq struct {
	Name        string  `json:"name" validate:"required"`
	PriductBind int64   `json:"priductBind" validate:"required,gt=0"`
	Price       float64 `json:"price" validate:"required,gt=0"`
}

type DelOneReq struct {
	ID   int64 `form:"id" validate:"required,gt=0"`
	UUID int64 `form:"uuid,optional" validate:"omitempty,gt=0"`
}

type GetProductInfoReq struct {
	ID   int64 `form:"id" validate:"required,gt=0"`
	UUID int64 `form:"uuid,optional" validate:"omitempty,gt=0"`
}

type GetProductInfoResp struct {
	Product Product `json:"product"`
}
